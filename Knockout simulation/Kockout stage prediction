pairing = [0,3,4,7,8,11,12,15,1,2,5,6,9,10,13,14]
world_cup = world_cup.sort_values(by=['Group', 'points', 'total_prob'], ascending=False).reset_index()
next_round_wc = world_cup.groupby('Group').nth([0, 1]) # select the top 2
next_round_wc = next_round_wc.reset_index()
next_round_wc = next_round_wc.loc[pairing]
next_round_wc = next_round_wc.set_index('Team')

finals = ['round_of_16', 'quarterfinal', 'semifinal', 'final']

labels = list()
odds = list()

for f in finals: #遍历所有淘汰赛阶段。
    print("___Starting of the {}___".format(f))
    iterations = int(len(next_round_wc) / 2)
    winners = []


for i in range(iterations):
    home = next_round_wc.index[i*2] 
    away = next_round_wc.index[i*2+1]
    print("{} vs. {}: ".format(home,away), end='')
    columns = ['average_rank', 'rank_difference', 'point_difference', 'score_difference', 'is_stake']
    row = pd.DataFrame([[np.nan, np.nan, np.nan, np.nan, True]], columns=columns)
    
home_rank = world_cup_rankings.loc[home, 'rank'] 
home_points = world_cup_rankings.loc[home, 'weighted_points'] 
opp_rank = world_cup_rankings.loc[away, 'rank'] 
opp_points = world_cup_rankings.loc[away, 'weighted_points']
    
row['average_rank'] = (home_rank + opp_rank) / 2 
row['rank_difference'] = home_rank - opp_rank 
row['point_difference'] = home_points - opp_points 
row['score_difference'] = 0
    
row_values = row.values.astype(float)
    
home_win_prob = model_cnn.predict_proba(row_values)[:,1][0] 
if home_win_prob <= 0.5:
    print("{0} wins with probability {1:.2f}".format(away, 1-home_win_prob))
    winners.append(away) 
else:
    print("{0} wins with probability {1:.2f}".format(home, home_win_prob))
    winners.append(home)


if home_win_prob == 0:  
    home_odds = float('inf')  
else:
    home_odds = 1 / home_win_prob  

if home_win_prob == 1: 
    away_odds = float('inf')  
else:
    away_odds = 1 / (1 - home_win_prob)  

labels.append("{}({:.2f}) vs. {}({:.2f})".format(
    world_cup_rankings.loc[home, 'country_abrv'], 
    home_odds, 
    world_cup_rankings.loc[away, 'country_abrv'], 
    away_odds
))
odds.append([home_win_prob, 1-home_win_prob])
            
next_round_wc = next_round_wc.loc[winners]
print("\n")
